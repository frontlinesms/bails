#!/bin/bash
set -e
source bails/head

tagPrefix="v"
orphanBranch=false
while [[ $1 == "--"* ]]; do
	if [[ $1 == "--orphan" ]]; then
		orphanBranch=true
	fi
	if [[ $1 == "--tag-prefix" ]]; then
		shift
		tagPrefix=$1
	fi
	shift
done

previousVersion=$(groovy -e "$(grep version *GrailsPlugin.groovy); println version")
echo "# Got old plugin version as: $previousVersion"

releaseVersion=$(echo $previousVersion | sed s/-SNAPSHOT//)
read -p "# Enter version for release [$releaseVersion]: " manualReleaseVersion
if [ -n "$manualReleaseVersion" ]; then
	releaseVersion="$manualReleaseVersion"
fi
echo "# Using new version: $releaseVersion"

nextVersion=$(expr $releaseVersion)
nextVersionHead=$(echo $nextVersion | sed -E 's/^(.*)\.[0-9]+$/\1/')
nextVersionTail=$(echo $nextVersion | sed -E 's/^.*\.([0-9]+)$/\1/')
nextVersionTail=$(($nextVersionTail + 1))
nextVersion="${nextVersionHead}.${nextVersionTail}-SNAPSHOT"
read -p "# Enter new version for development [$nextVersion]: " manualNextVersion
if [ -n "$manualNextVersion" ]; then
	nextVersion="$manualNextVersion"
fi
echo "# Next SNAPSHOT version: $nextVersion"

orphanBranchName=
if $orphanBranch; then
	orphanBranchName="release-${tagPrefix}${releaseVersion}"
	echo "# Creating new orphaned branch: $orphanBranchName"
	git checkout --orphan $orphanBranchName
	git commit -m"Branch for release of ${tagPrefix}${releaseVersion}"
fi

grails_set_plugin_version $releaseVersion
${0%/*}/../plugin/build_deploy --m2-deploy # TODO should support binary here too
git_commit_all_changes "[RELEASE: $releaseVersion]"
git tag "${tagPrefix}${releaseVersion}"
if $orphanBranch; then
	echo "# Pushing changes to remote for orhan branch: $orhpanBranchName"
	git push origin $orphanBranchName
	echo "# Checking out master so SNAPSHOT version rolling happens there instead of on orphan branch..."
	git checkout master
fi
grails_set_plugin_version $nextVersion
git_commit_all_changes "[POST-RELEASE: $releaseVersion -> $nextVersion]"
git push
git push --tags

